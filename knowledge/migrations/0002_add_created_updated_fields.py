# Generated by Django 5.0.6 on 2025-09-02 08:12

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('knowledge', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='anomaly',
            options={'ordering': ['-created_at'], 'verbose_name_plural': 'Anomalies'},
        ),
        migrations.AlterModelOptions(
            name='exceptiondisease',
            options={'ordering': ['recommendation__reco_type', 'health__description'], 'verbose_name': 'Disease Exception', 'verbose_name_plural': 'Disease Exceptions'},
        ),
        migrations.AlterModelOptions(
            name='medication',
            options={'ordering': ['diagnosis', 'sequence_no']},
        ),
        migrations.AlterModelOptions(
            name='patienthealth',
            options={'ordering': ['description'], 'verbose_name': 'Patient Health Condition', 'verbose_name_plural': 'Patient Health Conditions'},
        ),
        migrations.AlterModelOptions(
            name='recommendation',
            options={'ordering': ['reco_type', 'description']},
        ),
        migrations.AddField(
            model_name='anomaly',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='anomaly',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='exceptiondisease',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='exceptiondisease',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='medication',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='medication',
            name='notes',
            field=models.TextField(blank=True, help_text='Additional notes or instructions for this medication', null=True),
        ),
        migrations.AddField(
            model_name='medication',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='patienthealth',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='patienthealth',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='recommendation',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='recommendation',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='anomaly',
            name='bt_id',
            field=models.IntegerField(help_text='Reference ID for body temperature anomaly detection', verbose_name='Body Temperature Anomaly ID'),
        ),
        migrations.AlterField(
            model_name='anomaly',
            name='hr_id',
            field=models.IntegerField(help_text='Reference ID for heart rate anomaly detection', verbose_name='Heart Rate Anomaly ID'),
        ),
        migrations.AlterField(
            model_name='anomaly',
            name='pr_id',
            field=models.IntegerField(help_text='Reference ID for pulse rate anomaly detection', verbose_name='Pulse Rate Anomaly ID'),
        ),
        migrations.AlterField(
            model_name='anomaly',
            name='resp_id',
            field=models.IntegerField(help_text='Reference ID for respiration rate anomaly detection', verbose_name='Respiration Anomaly ID'),
        ),
        migrations.AlterField(
            model_name='anomaly',
            name='sp_id',
            field=models.IntegerField(help_text='Reference ID for blood oxygen anomaly detection', verbose_name='Blood Oxygen Anomaly ID'),
        ),
        migrations.AlterField(
            model_name='anomaly',
            name='status',
            field=models.BooleanField(choices=[('active', 'Active'), ('resolved', 'Resolved')], default='active', help_text='Whether this anomaly is currently active or resolved'),
        ),
        migrations.AlterField(
            model_name='exceptiondisease',
            name='health',
            field=models.ForeignKey(help_text='The health condition that triggers this exception', on_delete=django.db.models.deletion.CASCADE, related_name='exceptions', to='knowledge.patienthealth'),
        ),
        migrations.AlterField(
            model_name='exceptiondisease',
            name='recommendation',
            field=models.ForeignKey(help_text='The recommendation that has an exception', on_delete=django.db.models.deletion.CASCADE, related_name='exceptions', to='knowledge.recommendation'),
        ),
        migrations.AlterField(
            model_name='medication',
            name='diagnosis',
            field=models.ForeignKey(help_text='The anomaly diagnosis this medication is for', on_delete=django.db.models.deletion.CASCADE, related_name='medications', to='knowledge.anomaly'),
        ),
        migrations.AlterField(
            model_name='medication',
            name='recommendation',
            field=models.ForeignKey(help_text='The recommended treatment or medication', on_delete=django.db.models.deletion.PROTECT, related_name='medications', to='knowledge.recommendation'),
        ),
        migrations.AlterField(
            model_name='medication',
            name='sequence_no',
            field=models.PositiveSmallIntegerField(default=1, help_text='The order in which this medication should be administered'),
        ),
        migrations.AlterField(
            model_name='medication',
            name='user',
            field=models.ForeignKey(help_text='The healthcare provider who prescribed this medication', on_delete=django.db.models.deletion.PROTECT, related_name='medications', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='patienthealth',
            name='description',
            field=models.CharField(help_text='Description of the health condition (e.g., Diabetes, Hypertension)', max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='recommendation',
            name='context',
            field=models.CharField(choices=[('Home', 'Home'), ('Hospital', 'Hospital'), ('Ambulatory', 'Ambulatory'), ('Any', 'Any')], default='Any', help_text='Context in which this recommendation applies', max_length=20),
        ),
        migrations.AlterField(
            model_name='recommendation',
            name='description',
            field=models.CharField(help_text='Detailed description of the recommendation', max_length=200, unique=True),
        ),
        migrations.AlterField(
            model_name='recommendation',
            name='reco_type',
            field=models.CharField(choices=[('Temperature', 'Temperature'), ('Spo2', 'Blood Oxygen'), ('Heart', 'Heart Rate'), ('Respiration', 'Respiration'), ('Pressure', 'Blood Pressure'), ('Other', 'Other')], help_text='Type of recommendation based on vital sign', max_length=20),
        ),
        migrations.AddIndex(
            model_name='anomaly',
            index=models.Index(fields=['status'], name='knowledge_a_status_8d9cee_idx'),
        ),
        migrations.AddIndex(
            model_name='anomaly',
            index=models.Index(fields=['created_at'], name='knowledge_a_created_70b192_idx'),
        ),
        migrations.AddIndex(
            model_name='medication',
            index=models.Index(fields=['sequence_no'], name='knowledge_m_sequenc_8256a9_idx'),
        ),
        migrations.AddIndex(
            model_name='recommendation',
            index=models.Index(fields=['reco_type'], name='knowledge_r_reco_ty_1a999c_idx'),
        ),
        migrations.AddIndex(
            model_name='recommendation',
            index=models.Index(fields=['context'], name='knowledge_r_context_fb8e2e_idx'),
        ),
        migrations.AddConstraint(
            model_name='medication',
            constraint=models.CheckConstraint(check=models.Q(('sequence_no__gt', 0)), name='sequence_no_positive'),
        ),
    ]
